[{"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/App.tsx":"1","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/reportWebVitals.ts":"2","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Main/Main.tsx":"3","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/MobileHeader/MobileHeader.tsx":"4","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/data.ts":"5","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/Loader/Loader.tsx":"6","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Main/ProductCard/ProductCard.tsx":"7","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/functions.ts":"8","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Cart/Cart.tsx":"9","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Cart/Item/Item.tsx":"10","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/AmountHandler/AmountHandler.tsx":"11","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/index.tsx":"12","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/hooks/screen-size.tsx":"13","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/DesktopHeader/DesktopHeader.tsx":"14"},{"size":4031,"mtime":1606743412920,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1606489796915,"results":"17","hashOfConfig":"16"},{"size":996,"mtime":1606651768654,"results":"18","hashOfConfig":"16"},{"size":1453,"mtime":1606653653769,"results":"19","hashOfConfig":"16"},{"size":943,"mtime":1606569637127,"results":"20","hashOfConfig":"16"},{"size":156,"mtime":1606499762778,"results":"21","hashOfConfig":"16"},{"size":2786,"mtime":1606649435596,"results":"22","hashOfConfig":"16"},{"size":832,"mtime":1606648287210,"results":"23","hashOfConfig":"16"},{"size":3488,"mtime":1606649263693,"results":"24","hashOfConfig":"16"},{"size":1313,"mtime":1606567378215,"results":"25","hashOfConfig":"16"},{"size":651,"mtime":1606653783192,"results":"26","hashOfConfig":"16"},{"size":500,"mtime":1606489796914,"results":"27","hashOfConfig":"16"},{"size":1265,"mtime":1606743881836,"results":"28","hashOfConfig":"16"},{"size":887,"mtime":1606743548245,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"10papjg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/App.tsx",["60"],"import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport DesktopHeader from './components/DesktopHeader/DesktopHeader';\nimport Loader from './components/Loader/Loader';\nimport MobileHeader from './components/MobileHeader/MobileHeader';\nimport Cart from './containers/Cart/Cart';\nimport Main from './containers/Main/Main';\nimport { fetchFavoriteProducts, fetchGroceries } from './data';\nimport useScreenSize from './hooks/screen-size';\nimport { IProduct } from './models/product';\n\nfunction App() {\n  const { isDesktop } = useScreenSize();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showCart, setShowCart] = useState<boolean>(false);\n  const [cartList, setCartList] = useState<IProduct[]>([]);\n  const [products, setProducts] = useState<IProduct[]>([]);\n  const [isFavOn, setIsFavOn] = useState<boolean>(false);\n\n  useEffect(() => {\n    getProducts();\n  }, [isFavOn]);\n\n  /**\n   * Fetch products from the server.\n   * Fetch only favorites if selected.\n   */\n  const getProducts = async () => {\n    setLoading(true);\n    try {\n      let result;\n      if (isFavOn) result = await fetchFavoriteProducts();\n      else result = await fetchGroceries();\n      setProducts(result);\n    } catch (err) {\n      console.error('Error fetching products: ', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Add a product to the cart.\n   * Add one to amount if already there if stock enough.\n   * @param product {Object} Product to add to the cart.\n   */\n  const addProduct = (product: IProduct) => {\n    const provProducts = cartList;\n    const index = provProducts.findIndex((prod) => prod.id === product.id);\n    if (index >= 0) {\n      // The product is already in the cart.\n      // Check if there is stock enough\n      if (provProducts[index].stock > provProducts[index].amount!) {\n        // Add one to the amount\n        provProducts[index].amount! += 1;\n      }\n    } else {\n      // This product is not in the list.\n      // Add with amount set to 1.\n      const parsedProduct = {\n        ...product,\n        amount: 1,\n      };\n      provProducts.push(parsedProduct);\n    }\n    setCartList([...provProducts]);\n  };\n\n  /**\n   * Subtracts one from the selected amount.\n   * Take it out if it is the last one.\n   * @param product {Object} Product to take out of the cart. \n   */\n  const removeProduct = (product: IProduct) => {\n    const provProducts = cartList;\n    const index = provProducts.findIndex((prod) => prod.id === product.id);\n    if (index >= 0) {\n      // The product is in the list, subtract one.\n      // If new value = 0, then take it out the list.\n      // Subtract one.\n      provProducts[index].amount! -= 1;\n      if ((provProducts[index].amount! === 0)) {\n        // Take the product out of the list.\n        provProducts.splice(index, 1);\n      }\n    }\n    setCartList([...provProducts]);\n  };\n\n  return (\n    <div className=\"App\">\n      {isDesktop ? (\n        <DesktopHeader\n          favOn={isFavOn}\n          toggleFav={() => setIsFavOn(!isFavOn)}\n        />\n      ) : (\n          <MobileHeader\n            toggleCart={() => setShowCart(!showCart)}\n            title={showCart ? 'Shopping Cart' : 'Product List'}\n            cartOn={showCart}\n            toggleFav={() => setIsFavOn(!isFavOn)}\n            favOn={isFavOn}\n          />\n        )}\n      {loading ? (\n        <Loader />\n      ) : (\n          <div className=\"content\">\n            <Main\n              addProduct={(product) => addProduct(product)}\n              removeProduct={(product) => removeProduct(product)}\n              cartOn={showCart}\n              products={products}\n              cartList={cartList}\n            />\n            <Cart\n              show={isDesktop || showCart}\n              toggleCart={() => setShowCart(!showCart)}\n              items={cartList}\n              addProduct={(product) => addProduct(product)}\n              removeProduct={(product) => removeProduct(product)}\n            />\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/reportWebVitals.ts",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Main/Main.tsx",["61"],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/MobileHeader/MobileHeader.tsx",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/data.ts",[],["62","63"],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/Loader/Loader.tsx",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Main/ProductCard/ProductCard.tsx",["64"],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/functions.ts",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Cart/Cart.tsx",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/containers/Cart/Item/Item.tsx",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/AmountHandler/AmountHandler.tsx",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/index.tsx",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/hooks/screen-size.tsx",[],"/Users/gonzalo/Desktop/React_technical_challenge/mimacom/src/components/DesktopHeader/DesktopHeader.tsx",[],{"ruleId":"65","severity":1,"message":"66","line":22,"column":6,"nodeType":"67","endLine":22,"endColumn":15,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"65","severity":1,"message":"77","line":34,"column":8,"nodeType":"67","endLine":34,"endColumn":10,"suggestions":"78"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["79"],"@typescript-eslint/no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"React Hook useEffect has a missing dependency: 'product.favorite'. Either include it or remove the dependency array. If 'setIsFav' needs the current value of 'product.favorite', you can also switch to useReducer instead of useState and read 'product.favorite' in the reducer.",["82"],{"desc":"83","fix":"84"},"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [getProducts, isFavOn]",{"range":"87","text":"88"},"Update the dependencies array to be: [product.favorite]",{"range":"89","text":"90"},[902,911],"[getProducts, isFavOn]",[987,989],"[product.favorite]"]